class BlackJack
  def initialize
    board = [
      ["\u250F","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2513"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2517","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u251B"]
    ]

    deck = [
      "[A\u2660]", "[2\u2660]", "[3\u2660]", "[4\u2660]", "[5\u2660]",
      "[6\u2660]", "[7\u2660]", "[8\u2660]", "[9\u2660]", "[10\u2660]",
      "[J\u2660]", "[Q\u2660]", "[K\u2660]", "[A\u2665]", "[2\u2665]",
      "[3\u2665]", "[4\u2665]", "[5\u2665]", "[6\u2665]", "[7\u2665]",
      "[8\u2665]", "[9\u2665]", "[10\u2665]", "[J\u2665]", "[Q\u2665]",
      "[K\u2665]", "[A\u2666]", "[2\u2666]", "[3\u2666]", "[4\u2666]",
      "[5\u2666]", "[6\u2666]", "[7\u2666]", "[8\u2666]", "[9\u2666]",
      "[10\u2666]", "[J\u2666]", "[Q\u2666]", "[K\u2666]", "[A\u2663]",
      "[2\u2663]", "[3\u2663]", "[4\u2663]", "[5\u2663]", "[6\u2663]",
      "[7\u2663]", "[8\u2663]", "[9\u2663]", "[10\u2663]", "[J\u2663]",
      "[Q\u2663]", "[K\u2663]"
      ]

    100.times {deck.shuffle!}

    @y = 1
    @linewidth = 88

    @board = board

    @player_hand = ""
    @dealer_hand = ""
    
    @deck = deck

    @chips = 500
    @wager = 0
    @done = false
  end

  #------------------- GAMEBOARD METHODS -------------------#

  def display_board
    system("clear")
    @board.each do |arr| 
      arr.each do |cell| 
        print cell
      end
    end
  end

  def clear_board
    index = 1
    while index < 24
      @board[index].fill(" ", 1..90)
      index += 1
    end
  end

  def delete_row(y)
    @board[y].fill(" ", 1..90)
    @y -= 1
  end

  def line_break
    @y += 1
    display_board
  end

  def center_print_str(str)
    start = (@linewidth / 2) - (str.length / 2)
    index = 0
    str.length.times do |char| 
      @board[@y][start] = str[index]
      index += 1
      start += 1
    end
    @y += 1 
    display_board
  end

  def left_print_str(str)
    grid_index = 3
    str_index = 0
    str.length.times do |char| 
      @board[@y][grid_index] = str[str_index]
      grid_index += 1
      str_index += 1
    end
  end

  def right_print_str(str)
    grid_index = -4
    str_index = -1
    str.length.times do |char| 
      @board[@y][grid_index] = str[str_index]
      grid_index -= 1
      str_index -= 1
    end
  end

  def show_hands(turn)
    if turn == 1
      left_print_str(@player_hand)
      right_print_str("#{@dealer_hand[0..3]}[??]")
      @y += 1
    elsif turn == 2
      left_print_str(@player_hand)
      right_print_str(@dealer_hand)
      @y += 1
    elsif turn == 3
      left_print_str(@player_hand)
      @y += 1
    else
      right_print_str(@dealer_hand)
      @y += 1
    end
    display_board
  end
 
  def reset
    @player_hand.scan(/\[\w+\X\]/).each do |card|
      @deck << card
    end
    @dealer_hand.scan(/\[\w+\X\]/).each do |card|
      @deck << card
    end
    @player_hand = ""
    @dealer_hand = ""
    100.times {@deck.shuffle!}
    @y = 1
    clear_board
  end

  def invalid_input
    delete_row(@y)
    center_print_str("Invalid input")
    sleep(1)
    delete_row(@y-1)
  end

  #------------------- SCORES AND BETTING -------------------#

  def score(hand)
    score = 0
    hand = hand.to_s.scan(/\w+/)
    hand.each do |card| 
      if card.to_i > 0
        score += card.to_i
      elsif card.to_i == 0
        if card == "A"
          score += 11
        else
          score += 10
        end
      end
    end
    if score > 21 && hand.include?("A")
      if score - 10 <= 21
        score -= 10
      elsif score - 10 > 21
        score -= (10 * hand.count("A"))
      end
    end
    score
  end

  def wager
    center_print_str("You have #{@chips} chips. Wager?")
    input = gets.strip.scan(/\d+/)[0].to_i
    if input.to_i > 0 && input.to_i <= @chips
      @wager += input.to_i
      @chips -= input.to_i
    elsif input.to_i > @chips
      delete_row(3)
      center_print_str("You don't have enough chips!")
      sleep(1)
      delete_row(3)
      wager
    else
      delete_row(3)
      center_print_str("Invalid input")
      sleep(1)
      delete_row(3)
      wager
    end
  end


  def naturals?
    score(@player_hand) == 21 || score(@dealer_hand) == 21
  end

  def busted?
    return true if @chips == 0
  end

  #------------------- CONDITIONALS -------------------#

  def bust?
    score(@player_hand) > 21
  end

  def blackjack?
    score(@player_hand) == 21
  end

  def over?
    bust? || blackjack? || stay? || naturals?
  end

  def really_over?
    @done == true
  end

  def input
    @input = nil
    @input = gets.downcase.strip
  end

  def yes?
    @input == "y" || @input == ""
  end

  def no?
    @input == "n"
  end

  def stay?
    @input == "n"
  end

  def wager?
    @input.to_i > 0
  end

  #------------------- GAME PLAY -------------------#

  def first_deal
    @player_hand << @deck.shift
    @dealer_hand << @deck.shift
    @player_hand << @deck.shift
    @dealer_hand << @deck.shift
  end
  
  def deal(hand)
    hand << @deck.shift
  end

  def player_turn
    until over?
      center_print_str("Hit?(Y/n)")
      input
      if yes?
        deal(@player_hand)
        show_hands(3)
      elsif no?
        nil
      else
        invalid_input
      end
    end
  end

  def dealer_turn
    sleep(1)
    if score(@dealer_hand) < 17
      center_print_str("Dealer hits.")
      deal(@dealer_hand)
      show_hands(4)
      dealer_turn
    elsif score(@dealer_hand) > 21
      center_print_str("Dealer busted!")
    elsif score(@dealer_hand) == 21
      center_print_str("Dealer has 21!!")
    else
      center_print_str("Dealer stays at #{score(@dealer_hand)}.")
    end
  end

  def play
    until really_over?
      first_deal
      center_print_str("Welcome to BlackJack!!!")
      center_print_str("\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b\u207b")
      wager
      delete_row(3)
      center_print_str("Chips: #{@chips}  Wager: #{@wager}")
      show_hands(1)
      player_turn
      if bust?
        nil
      elsif naturals?
        center_print_str("BlackJack!!")
        if score(@dealer_hand) == 21
          show_hands(4)
        elsif score(@player_hand) == 21
          nil
        else
          show_hands(2)
        end
      elsif stay? || blackjack?
        if stay?
          line_break
          center_print_str("You stay at #{score(@player_hand)}. Dealer has #{score(@dealer_hand)}.")
          show_hands(4)
          dealer_turn
        elsif blackjack?
          center_print_str("You have 21!! Dealer has #{score(@dealer_hand)}.")
          dealer_turn
        end
      end
      endgame
      play_again
    end
  end
      
  def play_again
    line_break
    if busted?
      center_print_str("You're out of chips. Better luck next time!")
      sleep(1)
      @done = true
    else
      @wager = 0
      center_print_str("Play again?")
      input
      if yes?
        reset
      elsif no?
        line_break
        (@chips > 500) ? center_print_str("You won #{@chips - 500} chips! I'll see ya.") : center_print_str("You lost #{500 - @chips} chips! I'll see ya.")
        sleep(1)
        @done = true
        system("clear")
      else
        invalid_input
      end
    end
  end

  def endgame
    win = "You win #{@wager} chips! Your score: #{score(@player_hand)} Dealer score: #{score(@dealer_hand)}"
    push = "You push! Your score: #{score(@player_hand)} Dealer score: #{score(@dealer_hand)}"
    lose = "You lose! Your score: #{score(@player_hand)} Dealer score: #{score(@dealer_hand)}"
    bust = "You busted with #{score(@player_hand)}!"
    sleep(1)
    elsif score(@player_hand) > 21
      center_print_str(bust)
    elsif score(@dealer_hand) > 21
      center_print_str(win)
      @chips += (@wager * 2)
    elsif score(@player_hand) > score(@dealer_hand)
      center_print_str(win)
      @chips += (@wager * 2)
    elsif score(@player_hand) == score(@dealer_hand)
      center_print_str(push)
      @chips += @wager
    else
      center_print_str(lose)
    end
  end
end