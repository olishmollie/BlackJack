class BlackJack
  def initialize
    board = [
      ["\u250F","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2513"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2503"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","\u2503"],
      ["\u2517","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u2501","\u251B"]
    ]

    @y = 1
    @linewidth = 88

    @board = board

    @player_hand = ""
    @dealer_hand = ""
    
    deck = [
      "[A\u2660]", "[2\u2660]", "[3\u2660]", "[4\u2660]", "[5\u2660]",
      "[6\u2660]", "[7\u2660]", "[8\u2660]", "[9\u2660]", "[10\u2660]",
      "[J\u2660]", "[Q\u2660]", "[K\u2660]", "[A\u2665]", "[2\u2665]",
      "[3\u2665]", "[4\u2665]", "[5\u2665]", "[6\u2665]", "[7\u2665]",
      "[8\u2665]", "[9\u2665]", "[10\u2665]", "[J\u2665]", "[Q\u2665]",
      "[K\u2665]", "[A\u2666]", "[2\u2666]", "[3\u2666]", "[4\u2666]",
      "[5\u2666]", "[6\u2666]", "[7\u2666]", "[8\u2666]", "[9\u2666]",
      "[10\u2666]", "[J\u2666]", "[Q\u2666]", "[K\u2666]", "[A\u2663]",
      "[2\u2663]", "[3\u2663]", "[4\u2663]", "[5\u2663]", "[6\u2663]",
      "[7\u2663]", "[8\u2663]", "[9\u2663]", "[10\u2663]", "[J\u2663]",
      "[Q\u2663]", "[K\u2663]"
    ]

    100.times do 
      deck.shuffle!
    end
    
    @deck = deck
    
    @player_hand << @deck.shift
    @dealer_hand << @deck.shift
    @player_hand << @deck.shift
    @dealer_hand << @deck.shift
  end

  def line_break
    @y += 1
  end

  def turn
    center_print_str("Hit?(Y/n)")
    input
    if hit?
      deal(@player_hand)
      show_hands(3)
    elsif stay?
      nil
    else
      center_print_str("Invalid input.")
      turn
    end
  end

  def dealer_turn
    sleep(1)
    if score(@dealer_hand) < 17
      center_print_str("Dealer hits.")
      deal(@dealer_hand)
      show_hands(4)
      dealer_turn
    elsif score(@dealer_hand) > 21
      center_print_str("Dealer busts!")
      line_break
      endgame
    else
      center_print_str("Dealer stays at #{score(@dealer_hand)}.")
      line_break
      endgame
    end
  end

  def play
    center_print_str("WELCOME TO BLACKJACK!!!")
    if natural?(@dealer_hand) && !natural?(@player_hand)
      show_hands(2)
      center_print_str("You lose! Dealer has BlackJack.")
      line_break
    elsif natural?(@player_hand) && !natural?(@dealer_hand)
      show_hands(2)
      center_print_str("BlackJack -- you win!")
      line_break
    elsif natural?(@player_hand) && natural?(@dealer_hand)
      show_hands(2)
      center_print_string("You push! You and the dealer both have BlackJack.")
      line_break
    else
      show_hands(1)
      until over?
        turn
      end
      if blackjack?
        line_break
        center_print_str("BlackJack!!! Dealer has #{score(@dealer_hand)}.")
        show_hands(2)
        dealer_turn
        endgame
      elsif bust?
        center_print_str("You busted with #{score(@player_hand)}!")
        line_break
        play_again?
      else
        line_break
        center_print_str("You stay at #{score(@player_hand)}. Dealer has #{score(@dealer_hand)}.")
        show_hands(4)
        dealer_turn
      end
    end
  end

  def show_hands(turn)
    if turn == 1
      left_print_str(@player_hand)
      right_print_str("#{@dealer_hand[0..3]}[??]")
      @y += 1
    elsif turn == 2
      left_print_str(@player_hand)
      right_print_str(@dealer_hand)
      @y += 1
    elsif turn == 3
      left_print_str(@player_hand)
      @y += 1
    else
      right_print_str(@dealer_hand)
      @y += 1
    end
    display_board
  end

  def display_board
    system("clear")
    @board.each do |arr| 
      arr.each do |cell| 
        print cell
      end
    end
  end

  def center_print_str(str)
    start = (@linewidth / 2) - (str.length / 2)
    index = 0
    str.length.times do |char| 
      @board[@y][start] = str[index]
      index += 1
      start += 1
    end
    @y += 1
    display_board
  end

  def left_print_str(str)
    grid_index = 3
    str_index = 0
    str.length.times do |char| 
      @board[@y][grid_index] = str[str_index]
      grid_index += 1
      str_index += 1
    end
  end

  def right_print_str(str)
    grid_index = -4
    str_index = -1
    str.length.times do |char| 
      @board[@y][grid_index] = str[str_index]
      grid_index -= 1
      str_index -= 1
    end
  end

  def score(hand)
    score = 0
    hand = hand.to_s.scan(/\w+/)
    hand.each do |card| 
      if card.to_i > 0
        score += card.to_i
      elsif card.to_i == 0
        if card == "A"
          score += 11
        else
          score += 10
        end
      end
    end
    if score > 21 && hand.include?("A")
      if score - 10 <= 21
        score -= 10
      elsif score - 10 > 21
        score -= (10 * hand.count("A"))
      end
    end
    score
  end

  def natural?(hand)
    score(hand) == 21
  end

  def input
    @input = gets.strip.downcase
  end

  def hit?
    @input == "y" || @input == ""
  end

  def bust?
    score(@player_hand) > 21
  end

  def stay?
    @input == "n"
  end

  def blackjack?
    score(@player_hand) == 21
  end

  def invalid_input?
    @input != "y" || @input != "n" || @input != ""
  end

  def over?
    bust? || stay? || blackjack?
  end

  def deal(hand)
    hand << @deck.shift
  end

  def endgame
    win = "You win! Your score: #{score(@player_hand)} Dealer score: #{score(@dealer_hand)}"
    push = "You push! Your score: #{score(@player_hand)} Dealer score: #{score(@dealer_hand)}"
    lose = "You lose! Your score: #{score(@player_hand)} Dealer score: #{score(@dealer_hand)}"
    sleep(1)
    if score(@dealer_hand) > 21
      center_print_str(win)
    elsif score(@player_hand) > score(@dealer_hand)
      center_print_str(win)
    elsif score(@player_hand) == score(@dealer_hand)
      center_print_str(push)
    else
      center_print_str(lose)
    end
    line_break
    play_again?
  end

  def play_again?
    center_print_str("Play again?(Y/n)")
    input = gets.downcase.strip
    if input == "y" || input == ""
      BlackJack.new.play
    elsif input == "n"
      line_break
      center_print_str("I'll see ya.")
      sleep(1)
      system("clear")
    else
      center_print_str("Invalid input.")
      play_again?
    end
  end
end 